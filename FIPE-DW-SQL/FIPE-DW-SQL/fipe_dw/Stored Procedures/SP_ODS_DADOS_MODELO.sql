CREATE PROCEDURE[fipe_ods].[SP_ODS_DADOS_MODELO]
AS
BEGIN
	DECLARE @DTA_EXECUCAO DATETIME2(2) = GETDATE()
	MERGE INTO fipe_ods.ODS_DADOS_MODELO WITH (TABLOCK) AS DESTINO
	USING	(											
				SELECT 
					 COD_MES_REFERENCIA
					,COD_MODELO
					,COD_MARCA
					,COD_TIPO_VEICULO
					,COD_TIPO_COMBUSTIVEL
					,NUM_ANO_MODELO
					-- ,CAST(REPLACE(REPLACE(REPLACE(VLR_MODELO, 'R$', ''), '.', ''), ',', '.') AS decimal(10,2)) as VLR_MODELO
					, VLR_MODELO
				FROM  fipe_stg.STG_DADOS_MODELO (NOLOCK)
			) AS ORIGEM
	ON 	(	
			DESTINO.COD_MES_REFERENCIA		=	ORIGEM.COD_MES_REFERENCIA	AND 
			DESTINO.COD_MODELO				=	ORIGEM.COD_MODELO			AND
			DESTINO.COD_MARCA				=	ORIGEM.COD_MARCA			AND
			DESTINO.COD_TIPO_VEICULO		=	ORIGEM.COD_TIPO_VEICULO		AND
			DESTINO.NUM_ANO_MODELO			=	ORIGEM.NUM_ANO_MODELO		AND
			DESTINO.COD_TIPO_COMBUSTIVEL	=	ORIGEM.COD_TIPO_COMBUSTIVEL	
		)
	WHEN NOT MATCHED THEN
		INSERT
			(	
				COD_MES_REFERENCIA
				,COD_MODELO
				,COD_MARCA
				,COD_TIPO_VEICULO
				,COD_TIPO_COMBUSTIVEL
				,NUM_ANO_MODELO
				,VLR_MODELO
				,DTA_INCLUSAO
			)	
			VALUES
			(	
				 ORIGEM.COD_MES_REFERENCIA
				,ORIGEM.COD_MODELO
				,ORIGEM.COD_MARCA
				,ORIGEM.COD_TIPO_VEICULO
				,ORIGEM.COD_TIPO_COMBUSTIVEL
				,ORIGEM.NUM_ANO_MODELO
				,ORIGEM.VLR_MODELO
				,@DTA_EXECUCAO
			)																					
	WHEN MATCHED AND
	(    
		(ORIGEM.VLR_MODELO	<>	DESTINO.VLR_MODELO	OR	(ORIGEM.VLR_MODELO	IS NULL AND DESTINO.VLR_MODELO	IS NOT NULL)	OR	(ORIGEM.VLR_MODELO	IS NOT NULL AND DESTINO.VLR_MODELO	IS NULL))	
	)
	THEN UPDATE
		SET
			DESTINO.VLR_MODELO			= 	ORIGEM.VLR_MODELO,
			DESTINO.DTA_ATUALIZACAO		=	@DTA_EXECUCAO 
	;	
END