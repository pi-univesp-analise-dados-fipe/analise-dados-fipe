CREATE PROCEDURE [fipe_dw].[SP_DW_DIM_TEMPO_MENSAL]
AS
BEGIN
	DECLARE @DTA_EXECUCAO DATETIME2(2) = GETDATE()


	DROP TABLE IF EXISTS #DW_CADASTRO_MES
	SELECT NUM_MES, NME_MES, NME_MES_CURTO INTO #DW_CADASTRO_MES
		FROM (
				VALUES	(1,		'janeiro',		'jan'), 
						(2,		'fevereiro',	'fev'), 
						(3,		'março',		'mar'),
						(4,		'abril',		'abr'),
						(5,		'maio',			'mai'),
						(6,		'junho',		'jun'),
						(7,		'julho',		'jul'),
						(8,		'agosto',		'ago'),
						(9,		'setembro',		'set'),
						(10,	'outubro',		'out'),
						(11,	'novembro',		'nov'),
						(12,	'dezembro',		'dez')
			) AS DW_CADASTRO_MES (NUM_MES, NME_MES, NME_MES_CURTO)

	DROP TABLE IF EXISTS #ODS_CADASTRO_MES_REFERENCIA
  	SELECT COD_MES_REFERENCIA, NME_MES_REFERENCIA,
		REVERSE(PARSENAME(REPLACE(REVERSE(TRIM(NME_MES_REFERENCIA)), '/', '.'), 1)) NME_MES,
		REVERSE(PARSENAME(REPLACE(REVERSE(TRIM(NME_MES_REFERENCIA)), '/', '.'), 2)) NUM_ANO
		INTO #ODS_CADASTRO_MES_REFERENCIA
	from fipe_ods.ODS_MES_REFERENCIA 
	
	SELECT	REF.COD_MES_REFERENCIA, 
			CM.NUM_MES, 
			CM.NME_MES_CURTO, 
			ref.NME_MES_REFERENCIA NME_MES_ANO_LONGO, 
			REF.NME_MES,
			REF.NUM_ANO
		INTO #DIM_TEMPO
	from #ODS_CADASTRO_MES_REFERENCIA REF
	INNER JOIN #DW_CADASTRO_MES CM
	ON REF.NME_MES = cm.NME_MES

	CREATE CLUSTERED INDEX IXC_TMP_DIM_TEMPO ON #DIM_TEMPO (COD_MES_REFERENCIA)

	MERGE INTO fipe_dw.DW_DIM_TEMPO_MENSAL WITH (TABLOCK) AS DESTINO
	USING	(											
				SELECT 
						COD_MES_REFERENCIA, 
						NUM_MES, 
						NME_MES_CURTO, 
						NME_MES_ANO_LONGO, 
						NME_MES,
						NUM_ANO
				FROM  #DIM_TEMPO (NOLOCK)
			) AS ORIGEM
	ON 	(	
			DESTINO.COD_MES_REFERENCIA		=	ORIGEM.COD_MES_REFERENCIA	
		)
	WHEN NOT MATCHED THEN
		INSERT
			(	
				 COD_MES_REFERENCIA
				,NUM_MES
				,NME_MES_CURTO
				,NME_MES_ANO_LONGO
				,NME_MES
				,NUM_ANO
				,DTA_INCLUSAO
			)	
			VALUES
			(	
				 ORIGEM.COD_MES_REFERENCIA
				,ORIGEM.NUM_MES
				,ORIGEM.NME_MES_CURTO
				,ORIGEM.NME_MES_ANO_LONGO
				,ORIGEM.NME_MES
				,ORIGEM.NUM_ANO
				,@DTA_EXECUCAO
			)																					
	WHEN MATCHED AND
	(    
		(ORIGEM.NUM_MES				<>	DESTINO.NUM_MES				OR	(ORIGEM.NUM_MES				IS NULL AND DESTINO.NUM_MES				IS NOT NULL)	OR	(ORIGEM.NUM_MES				IS NOT NULL AND DESTINO.NUM_MES				IS NULL))	OR 
		(ORIGEM.NME_MES_CURTO		<>	DESTINO.NME_MES_CURTO		OR	(ORIGEM.NME_MES_CURTO		IS NULL AND DESTINO.NME_MES_CURTO		IS NOT NULL)	OR	(ORIGEM.NME_MES_CURTO		IS NOT NULL AND DESTINO.NME_MES_CURTO		IS NULL))	OR 
		(ORIGEM.NME_MES_ANO_LONGO	<>	DESTINO.NME_MES_ANO_LONGO	OR	(ORIGEM.NME_MES_ANO_LONGO	IS NULL AND DESTINO.NME_MES_ANO_LONGO	IS NOT NULL)	OR	(ORIGEM.NME_MES_ANO_LONGO	IS NOT NULL AND DESTINO.NME_MES_ANO_LONGO	IS NULL))	OR 
		(ORIGEM.NME_MES				<>	DESTINO.NME_MES				OR	(ORIGEM.NME_MES				IS NULL AND DESTINO.NME_MES				IS NOT NULL)	OR	(ORIGEM.NME_MES				IS NOT NULL AND DESTINO.NME_MES				IS NULL))	OR 
		(ORIGEM.NUM_ANO				<>	DESTINO.NUM_ANO				OR	(ORIGEM.NUM_ANO				IS NULL AND DESTINO.NUM_ANO				IS NOT NULL)	OR	(ORIGEM.NUM_ANO				IS NOT NULL AND DESTINO.NUM_ANO				IS NULL))		
	)
	THEN UPDATE
		SET
			DESTINO.NUM_MES				=	ORIGEM.NUM_MES				,
			DESTINO.NME_MES_CURTO		=	ORIGEM.NME_MES_CURTO		,
			DESTINO.NME_MES_ANO_LONGO	=	ORIGEM.NME_MES_ANO_LONGO	,
			DESTINO.NME_MES				=	ORIGEM.NME_MES				,
			DESTINO.NUM_ANO				=	ORIGEM.NUM_ANO				,
			DESTINO.DTA_ATUALIZACAO		=	@DTA_EXECUCAO 
	;	
END