CREATE   PROCEDURE [fipe_dw].[SP_DW_FTO_CRIME_VEICULO]
	@COD_MES_REFERENCIA		INT = NULL,
	@FLG_REPROCESSAMENTO	BIT 
AS
BEGIN
	DECLARE @DTA_EXECUCAO DATETIME2(2) = GETDATE()
	IF @COD_MES_REFERENCIA IS NULL AND @FLG_REPROCESSAMENTO = 0 
		SET @COD_MES_REFERENCIA =  (SELECT MAX(COD_MES_REFERENCIA) FROM fipe_dw.DW_DIM_TEMPO_MENSAL)

	DROP TABLE IF EXISTS #DW_FTO_CRIME_VEICULO
	; WITH STG_ROUBO AS (
	SELECT UF.COD_UF, 
		UF.NME_UF, 
		TIPO_CRIME, 
		ANO, 
		MES, 
		QTD_OCORRENCIA 
		FROM fipe_stg.STG_INDICADOR_SEGURANCA SG
	INNER JOIN FIPE_ODS.ODS_UNIDADE_FEDERATIVA UF 
	ON SG.UF =  UF.NME_UF
	WHERE TIPO_CRIME IN ('Furto de veículo', 'Roubo de veículo')
	) SELECT 
		COD_UF, 
		ANO, 
		MES,
		[Furto de veículo]	QTD_FURTO, 
		[Roubo de veículo]	QTD_ROUBO
	INTO #DW_FTO_CRIME_VEICULO
	FROM STG_ROUBO STG
	PIVOT(SUM(QTD_OCORRENCIA) FOR TIPO_CRIME IN ([Furto de veículo], [Roubo de veículo])) AS P

	CREATE CLUSTERED INDEX IXC_CRIME_VEICULO ON #DW_FTO_CRIME_VEICULO (COD_UF, ANO, MES)
		
	MERGE INTO [fipe_dw].[DW_FTO_CRIME_VEICULO] WITH (TABLOCK) AS DESTINO
		USING (													
			SELECT 
				STG.COD_UF, 
				TEMPO.COD_MES_REFERENCIA,
				STG.QTD_FURTO, 
				STG.QTD_ROUBO
			FROM #DW_FTO_CRIME_VEICULO STG
			INNER JOIN FIPE_DW.DW_DIM_TEMPO_MENSAL TEMPO
				ON	STG.ANO = TEMPO.NUM_ANO AND 
					STG.MES = TEMPO.NME_MES 	
		) AS ORIGEM
	ON 
		(
			DESTINO.COD_MES_REFERENCIA		= ORIGEM.COD_MES_REFERENCIA		AND		 
			DESTINO.COD_UF					= ORIGEM.COD_UF
		)
	WHEN NOT MATCHED THEN
		INSERT
			(	
				  COD_UF
				, COD_MES_REFERENCIA
				, QTD_FURTO
				, QTD_ROUBO
				, DTA_INCLUSAO
			)	
			VALUES
			(	
				 ORIGEM.COD_UF
				,ORIGEM.COD_MES_REFERENCIA
				,ORIGEM.QTD_FURTO
				,ORIGEM.QTD_ROUBO
				,@DTA_EXECUCAO
			)																					
	WHEN MATCHED AND
	(    
		(ORIGEM.QTD_FURTO	<>	DESTINO.QTD_FURTO	OR	(ORIGEM.QTD_FURTO	IS NULL AND DESTINO.QTD_FURTO	IS NOT NULL)	OR	(ORIGEM.QTD_FURTO	IS NOT NULL AND DESTINO.QTD_FURTO	IS NULL))	OR
		(ORIGEM.QTD_ROUBO	<>	DESTINO.QTD_ROUBO	OR	(ORIGEM.QTD_ROUBO	IS NULL AND DESTINO.QTD_ROUBO	IS NOT NULL)	OR	(ORIGEM.QTD_ROUBO	IS NOT NULL AND DESTINO.QTD_ROUBO	IS NULL))			
	)
	THEN UPDATE
		SET
			DESTINO.QTD_FURTO			= 	ORIGEM.QTD_FURTO	,
			DESTINO.QTD_ROUBO			= 	ORIGEM.QTD_ROUBO	,
			DESTINO.DTA_ATUALIZACAO		=	@DTA_EXECUCAO 						
	;	
END