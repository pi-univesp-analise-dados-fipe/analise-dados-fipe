
 CREATE PROCEDURE [fipe_dw].[SP_DW_DIM_REGIAO]
 AS 
 BEGIN 
	DECLARE @DTA_EXECUCAO DATETIME = GETDATE()
	
	MERGE INTO [fipe_dw].[DW_DIM_REGIAO] WITH (TABLOCK) AS DESTINO
	USING	(											
				SELECT 
					COD_UF, 
					NME_UF, 
					SGL_UF,
					RG.COD_REGIAO,
					RG.NME_REGIAO
				FROM [fipe_ods].[ODS_UNIDADE_FEDERATIVA] UF 
				INNER JOIN fipe_ods.ODS_REGIAO RG
					ON UF.COD_REGIAO =  RG.COD_REGIAO
			) AS ORIGEM
	ON 	(	
			DESTINO.COD_UF					=	ORIGEM.COD_UF	AND 
			DESTINO.COD_REGIAO				=	ORIGEM.COD_REGIAO 
		)
	WHEN NOT MATCHED THEN
		INSERT
			(	
				COD_UF, 
				NME_UF, 
				SGL_UF,
				COD_REGIAO,
				NME_REGIAO,
				DTA_INCLUSAO
			)	
			VALUES
			(	
				ORIGEM.COD_UF, 
				ORIGEM.NME_UF, 
				ORIGEM.SGL_UF,
				ORIGEM.COD_REGIAO,
				ORIGEM.NME_REGIAO,
				GETDATE()
			)																					
	WHEN MATCHED AND
	(    
		(ORIGEM.NME_UF		<>	DESTINO.NME_UF		OR	(ORIGEM.NME_UF		IS NULL AND DESTINO.NME_UF		IS NOT NULL)	OR	(ORIGEM.NME_UF		IS NOT NULL AND DESTINO.NME_UF		IS NULL))	OR 
		(ORIGEM.SGL_UF		<>	DESTINO.SGL_UF		OR	(ORIGEM.SGL_UF		IS NULL AND DESTINO.SGL_UF		IS NOT NULL)	OR	(ORIGEM.SGL_UF		IS NOT NULL AND DESTINO.SGL_UF		IS NULL))	OR 
		(ORIGEM.NME_REGIAO	<>	DESTINO.NME_REGIAO	OR	(ORIGEM.NME_REGIAO	IS NULL AND DESTINO.NME_REGIAO	IS NOT NULL)	OR	(ORIGEM.NME_REGIAO	IS NOT NULL AND DESTINO.NME_REGIAO	IS NULL))	
	)
	THEN UPDATE
		SET
			DESTINO.NME_UF		= 	ORIGEM.NME_UF,
			DESTINO.SGL_UF		=	ORIGEM.SGL_UF,
			DESTINO.NME_REGIAO	=	ORIGEM.	NME_REGIAO,
			DTA_ATUALIZACAO		=	@DTA_EXECUCAO 
	;	
	
END